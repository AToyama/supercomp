MUTEX:

Ex:
o objeto do tipo mutex exige que o programa chame as funções .lock() e .unlonck() em alguns momentos específicos, já o lock_guard e o unique_lock realizam essas funções quando necessário, sem que seja necessário chamar a função no código.

Ex:
A vantagem de ter usado essa técnica, é que não foi necessário informar para o programa quando ele deveria executar o lock e o unlock do objeto.


CONDITIONAL VARIABLE:

Ex:
O código nunca atinge o fim do trabalho B. Acredito que a causa do problema seja que no trabalho A, a notificação na variável cA está ocorrendo antes do trabalho B pedir para a mesma esperar a notificação.

Ex:
5100ms

Ex:
pipeline

SEMAPHORES:

Ex:
Mutex e Lock, para realizar os acquires e releases das threads.

Ex:
classe Semaphore{
	int n;
	mutex count;
	mutex queue;
}

void acquire(){
	
	count lock
	
	n = n-1

	se n > 0{
		queue lock
	}
	count unlock
}

void release(){

	count lock
	
	n = n+1;
	
	se n <= 0{
		queue unlock
	}
}



